/*
*   Copyright (c) 2016. Jefferson Lab (JLab). All rights reserved.
*   For more information contact author at gurjyan@jlab.org
*   Department of Experimental Nuclear Physics, Jefferson Lab.
*/

plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
}

group = 'org.jlab.coda'
archivesBaseName = 'jinflux'
version = '1.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

defaultTasks 'build'

sourceSets {
    main {
        java {
            srcDir 'src'
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    api 'org.influxdb:influxdb-java:2.2'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    archiveClassifier.set('sources')
}

artifacts {
    archives sourcesJar
}

// Local repo location fallback
if (!hasProperty('localPublicationRepo')) {
    ext.localPublicationRepo = 'file://localhost/tmp/repo'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'org.jlab.coda'
            artifactId = 'jinflux'
            version = '1.0-SNAPSHOT'

            from components.java
            artifact tasks.sourcesJar
        }
    }
    repositories {
        maven {
            url = uri(localPublicationRepo)
        }
    }
}

// Deployment task
def deploySpec = copySpec {
    into('lib') {
        from configurations.runtimeClasspath
        from jar.archivePath
    }
}

task deploy(type: Copy, dependsOn: jar) {
    def dest = System.getenv('CLARA_HOME')

    doFirst {
        if (!dest) {
            throw new GradleException('CLARA_HOME not set')
        }
    }

    into dest
    with deploySpec
}
